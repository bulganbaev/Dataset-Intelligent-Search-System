
R_DengAI_ARIMA_GARCH_ANN
This project was completed as the final project for my time series modeling course. It utilized R to construct seasonal auto arima, garch and artificial neural networks against the DengAI dataset for a Driven Data competition.
DrivenData hosted a competition on its website, DengAI: Preventing Disease Spread. The purpose of the competition is to predict local epidemics of Dengue Fever. Dengue fever is a mosquito-borne disease that, in severe cases, can cause severe bleeding, low blood pressure, and even death. It occurs in tropical and sub-tropical parts of the world as weather patterns in these parts of the world are conducive to the spread of mosquitoes. It is believed that the spread of Dengue is related to the climate variables such as temperature and precipitation. For this competition, environment data was collected from several governmental agencies including the Centers for Disease Control and Prevention, the National Oceanic and Atmospheric Administration, and the US Department of Commerce. An understanding of the relationship between environmental variables and the spread of Dengue will facilitate the ability to allocate resources for further research initiatives which can help prevent further outbreaks or contribute to the education of affected populations.
The object of this competition was to build a model that minimized the mean absolute error in predicting dengue fever cases. Some basic data cleanup included imputing missing values using a time series pattern analysis, if there wasn't too much volatility. In the case of too much volatility, the MICE package was used to impute the missing values. Since this was a time series course, I focused on time series methods, (seasonal auto arima, garch, and artificial neural networks), while competing in this competition. This yielded a decent result, which placed 616 out of 2269 in the DengAI competition. The model that provided the best results on the test set submitted to DengAI was the GARCH model without climatic data included. Overall, all the models did a good job with an MAE ranging from 26.6154 to 34.8056. This shows that there wasn’t a great deal of difference between the models. Unfortunately, I hadn't yet taken the machine learning course or I could have done a better job of tuning the parameters on the neural network. The best score in my class came from a neural network. However, the scores on my garch allowed me to score in the top portion of my class and nobody else had considered using that method as it is generally used for financial data. This leads me to think that an ensemble model consisting of garch and ANN, (or even better - a recurrent neural network to capture the temporal element) would be fun to try out.

